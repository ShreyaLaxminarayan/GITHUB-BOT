name: Setup Dotnet SDK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  setup-dotnet-sdk:
    runs-on: self-hosted 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh mutt python
          
      - name: clone
        run: |
          mkdir runtime
          git clone https://github.com/dotnet/runtime.git
          
      - name: Set up GitHub CLI authentication
        run: |
          echo ${{ secrets.PAT_TOKEN }} | gh auth login --with-token

      - name: Create directories
        run: |
          mkdir -p sdk packages
          version=$(jq -r .sdk.version $GITHUB_WORKSPACE/runtime/global.json)
          echo "v$version"
          mkdir -p $GITHUB_WORKSPACE/runtime/.dotnet/

      - name: Download SDK from GitHub Releases if extraction fails
        run: |
            set -x
            version=$(jq -r .sdk.version $GITHUB_WORKSPACE/runtime/global.json)
            echo "v$version"

            pushd sdk
            export GH_TOKEN=${{ secrets.PAT_TOKEN }}

            gh release list --repo IBM/dotnet-s390x

            gh release download v$version --repo IBM/dotnet-s390x --pattern dotnet-sdk-${version}-linux-s390x.tar.gz
            if [ $? -ne 0 ]; then
              echo "Failed to get the dotnet host SDK version ${version}. Please build the SDK" >> $GITHUB_WORKSPACE/error.log
              exit 1
            fi
            popd
            pushd packages
            gh release download v$version --repo IBM/dotnet-s390x --pattern '*linux-s390x*.nupkg'

            tar -xzf $GITHUB_WORKSPACE/sdk/dotnet-sdk-${version}-linux-s390x.tar.gz --directory $GITHUB_WORKSPACE/runtime/.dotnet/
            popd

      - name: Install Build dependencies
        run: |
          set -x
          pushd $GITHUB_WORKSPACE/runtime/eng/common/native
          sudo ./install-dependencies.sh
          popd
      
      - name: Build .NET Runtime
        run: |
          set -x

          pushd $GITHUB_WORKSPACE/runtime

          runtime_build_flags=(
            --cmakeargs -DCLR_CMAKE_USE_SYSTEM_ZLIB=true
            --portablebuild false
            --runtimeconfiguration Release
            --librariesConfiguration Debug
            --warnAsError false
            "/p:NoPgoOptimize=true"
            "/p:UsingToolMicrosoftNetCompilers=true"
            "/p:TreatWarningsAsErrors=false"
            "/p:DotNetBuildFromSource=true"
            "/p:DotNetBuildSourceOnly=true"
            "/p:DotNetBuildTests=true"
            "/p:PrimaryRuntimeFlavor=Mono"
            "/p:TargetRid=linux-s390x"
            --subset clr+mono+libs+host+packs+libs.tests
            --test
          )

          ./build.sh "${runtime_build_flags[@]}" > log

          # Check if build was successful
          if [ $? -ne 0 ]; then
            echo "build failed! please check the errors" >> $GITHUB_WORKSPACE/error.log
          else
            echo "build success!" >> $GITHUB_WORKSPACE/build_success.log
          fi
          
          popd        
          

